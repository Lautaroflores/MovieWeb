{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\master\\\\Desktop\\\\Front End\\\\React\\\\muestra\\\\src\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Card } from \"./Card\";\nimport movies from \"./movies.json\";\nimport styles from \"./Grid.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { get } from \"../utils/Fetch\";\nimport { Spinner } from \"./Spinner\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport function Grid() {\n  _s2();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    setLoading(true);\n    const searchUrl = search ? \"/search/movie?=query=\" + search : \"/discover/movie\";\n    get(searchUrl).then(data => {\n      setMovies(data.results);\n      setLoading(false);\n    });\n  }, [search]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.grid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Grid, \"fwwL76sOLBF70M9dUL3H/Pu7j9A=\", false, function () {\n  return [useQuery];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/master/Desktop/Front End/React/muestra/src/components/Grid.jsx"],"names":["Card","movies","styles","useEffect","useState","get","Spinner","useLocation","useQuery","URLSearchParams","search","Grid","setMovies","loading","setLoading","query","searchUrl","then","data","results","grid","map","movie","id"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAElB,SAAO,IAAIC,eAAJ,CAAoBF,WAAW,GAAGG,MAAlC,CAAP;AAED;;GAJQF,Q;UAEoBD,W;;;AAI7B,OAAO,SAASI,IAAT,GAAgB;AAAA;;AACrB,QAAM,CAACV,MAAD,EAASW,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEF,QAAMW,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAME,MAAM,GAAGK,KAAK,CAACV,GAAN,CAAU,QAAV,CAAf;AAGEF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,SAAS,GAAGN,MAAM,GAAG,0BAA0BA,MAA7B,GAAsC,iBAA9D;AACAL,IAAAA,GAAG,CAACW,SAAD,CAAH,CAAeC,IAAf,CAAqBC,IAAD,IAAU;AAC5BN,MAAAA,SAAS,CAACM,IAAI,CAACC,OAAN,CAAT;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GAPQ,EAON,CAACJ,MAAD,CAPM,CAAT;;AASA,MAAIG,OAAJ,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEX,MAAM,CAACkB,IAAtB;AAAA,cACGnB,MAAM,CAACoB,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAqB,MAAA,KAAK,EAAEA;AAA5B,OAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IA5BeZ,I;UAIFH,Q;;;KAJEG,I","sourcesContent":["import { Card } from \"./Card\";\r\nimport movies from \"./movies.json\";\r\nimport styles from \"./Grid.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { get } from \"../utils/Fetch\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction useQuery() {\r\n\r\n  return new URLSearchParams(useLocation().search)\r\n\r\n}\r\n\r\nexport function Grid() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\nconst query = useQuery();\r\nconst search = query.get(\"search\");\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const searchUrl = search ? \"/search/movie?=query=\" + search : \"/discover/movie\";\r\n    get(searchUrl).then((data) => {\r\n      setMovies(data.results);\r\n      setLoading(false);\r\n    });\r\n  }, [search]);\r\n\r\n  if (loading) {\r\n    return <Spinner/>;\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.grid}>\r\n      {movies.map((movie) => (\r\n        <Card key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}