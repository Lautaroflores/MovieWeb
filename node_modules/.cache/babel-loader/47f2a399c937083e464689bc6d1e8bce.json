{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\master\\\\Desktop\\\\Front End\\\\React\\\\muestra\\\\src\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport { Card } from \"./Card\";\nimport movies from \"./movies.json\";\nimport styles from \"./Grid.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { get } from \"../utils/Fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Grid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    get(\"/discover/movie\").then(data => {\n      setMovies(data.results);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.grid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"72fwlr08e18pammocXupWZZTEwc=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/master/Desktop/Front End/React/muestra/src/components/Grid.jsx"],"names":["Card","movies","styles","useEffect","useState","get","Grid","setMovies","loading","setLoading","then","data","results","grid","map","movie","id"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,gBAApB;;AACA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACrB,QAAM,CAACL,MAAD,EAASM,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,GAAG,CAAC,iBAAD,CAAH,CAAuBK,IAAvB,CAA6BC,IAAD,IAAU;AACpCJ,MAAAA,SAAS,CAACI,IAAI,CAACC,OAAN,CAAT;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,MAAID,OAAJ,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEN,MAAM,CAACW,IAAtB;AAAA,cACGZ,MAAM,CAACa,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAqB,MAAA,KAAK,EAAEA;AAA5B,OAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvBeV,I;;KAAAA,I","sourcesContent":["import { Card } from \"./Card\";\r\nimport movies from \"./movies.json\";\r\nimport styles from \"./Grid.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { get } from \"../utils/Fetch\";\r\nexport function Grid() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    get(\"/discover/movie\").then((data) => {\r\n      setMovies(data.results);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.grid}>\r\n      {movies.map((movie) => (\r\n        <Card key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}