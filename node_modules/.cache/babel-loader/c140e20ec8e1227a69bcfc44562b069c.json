{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\master\\\\Desktop\\\\Front End\\\\React\\\\muestra\\\\src\\\\components\\\\Grid.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Card } from \"./Card\";\nimport movies from \"./movies.json\";\nimport styles from \"./Grid.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { get } from \"../utils/Fetch\";\nimport { Spinner } from \"./Spinner\";\nimport { useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport function Grid() {\n  _s2();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    setLoading(true);\n    const searchUrl = search ? \"/search/movie?query=\" + search + \"&page=\" + page : \"/discover/movie?page=\" + page;\n    get(searchUrl).then(data => {\n      setMovies(prevMovies => prevMovies.concat(data.results));\n      setHasMore(data.page < data.total_pages);\n      setLoading(false);\n    });\n  }, [search, page]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: movies.length,\n    next: () => setPage(prevPage => prevPage + 1),\n    hasMore: true,\n    loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.grid,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Grid, \"uXyKU8ewhtvpIW+tSkGwz4DSudA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/master/Desktop/Front End/React/muestra/src/components/Grid.jsx"],"names":["Card","movies","styles","useEffect","useState","get","Spinner","useLocation","InfiniteScroll","useQuery","URLSearchParams","search","Grid","setMovies","loading","setLoading","page","setPage","hasMore","setHasMore","query","searchUrl","then","data","prevMovies","concat","results","total_pages","length","prevPage","grid","map","movie","id"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,SAAO,IAAIC,eAAJ,CAAoBH,WAAW,GAAGI,MAAlC,CAAP;AACD;;GAFQF,Q;UACoBF,W;;;AAG7B,OAAO,SAASK,IAAT,GAAgB;AAAA;;AACrB,QAAM,CAACX,MAAD,EAASY,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMgB,KAAK,GAAGX,QAAQ,EAAtB;AACA,QAAME,MAAM,GAAGS,KAAK,CAACf,GAAN,CAAU,QAAV,CAAf;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMM,SAAS,GAAGV,MAAM,GACpB,yBAAyBA,MAAzB,GAAkC,QAAlC,GAA6CK,IADzB,GAEpB,0BAA0BA,IAF9B;AAGAX,IAAAA,GAAG,CAACgB,SAAD,CAAH,CAAeC,IAAf,CAAqBC,IAAD,IAAU;AAC5BV,MAAAA,SAAS,CAAEW,UAAD,IAAgBA,UAAU,CAACC,MAAX,CAAmBF,IAAI,CAACG,OAAxB,CAAjB,CAAT;AACAP,MAAAA,UAAU,CAACI,IAAI,CAACP,IAAL,GAAYO,IAAI,CAACI,WAAlB,CAAV;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GAVQ,EAUN,CAACJ,MAAD,EAASK,IAAT,CAVM,CAAT;AAYA,sBACE,QAAC,cAAD;AACA,IAAA,UAAU,EAAEf,MAAM,CAAC2B,MADnB;AAEA,IAAA,IAAI,EAAE,MAAKX,OAAO,CAAGY,QAAD,IAAcA,QAAQ,GAAG,CAA3B,CAFlB;AAGA,IAAA,OAAO,EAAE,IAHT;AAIA,IAAA,MAAM,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA,2BAME;AAAI,MAAA,SAAS,EAAE3B,MAAM,CAAC4B,IAAtB;AAAA,gBACG7B,MAAM,CAAC8B,GAAP,CAAYC,KAAD,iBACV,QAAC,IAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,SAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IApCerB,I;UAMAH,Q;;;KANAG,I","sourcesContent":["import { Card } from \"./Card\";\r\nimport movies from \"./movies.json\";\r\nimport styles from \"./Grid.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { get } from \"../utils/Fetch\";\r\nimport { Spinner } from \"./Spinner\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport function Grid() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const query = useQuery();\r\n  const search = query.get(\"search\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const searchUrl = search\r\n      ? \"/search/movie?query=\" + search + \"&page=\" + page\r\n      : \"/discover/movie?page=\" + page;\r\n    get(searchUrl).then((data) => {\r\n      setMovies((prevMovies) => prevMovies.concat (data.results));\r\n      setHasMore(data.page < data.total_pages);\r\n      setLoading(false);\r\n    });\r\n  }, [search, page]);\r\n\r\n  return (\r\n    <InfiniteScroll\r\n    dataLength={movies.length} \r\n    next={()=> setPage ((prevPage) => prevPage + 1 )}\r\n    hasMore={true}\r\n    loader={<Spinner/>}>\r\n\r\n      <ul className={styles.grid}>\r\n        {movies.map((movie) => (\r\n          <Card key={movie.id} movie={movie} />\r\n        ))}\r\n      </ul>\r\n\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}