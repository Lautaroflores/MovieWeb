{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\master\\\\Desktop\\\\Front End\\\\React\\\\muestra\\\\src\\\\pages\\\\Details.jsx\",\n    _s = $RefreshSig$();\n\nimport movie from \"./movie.json\";\nimport styles from \"../components/Details.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { get } from \"../utils/Fetch\";\nimport { Spinner } from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Details() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    get(\"/movie/\" + movieId).then(data => {\n      setMovie(data);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  const imageUrl = \"https://image.tmdb.org/t/p/w500/\" + movie.poster_path;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.detailsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${styles.col} ${styles.movieImage}`,\n      src: imageUrl,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.col,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this), \"  \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genres: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 18\n        }, this), movie.genres.map(genre => genre.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), \"  \", movie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Details, \"fEmat3WOQ3Q6itQGhWd9H+ncAoQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/master/Desktop/Front End/React/muestra/src/pages/Details.jsx"],"names":["movie","styles","useParams","useEffect","useState","get","Spinner","Details","movieId","setMovie","loading","setLoading","then","data","imageUrl","poster_path","detailsContainer","col","movieImage","title","genres","map","genre","name","join","overview"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AACA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACtB,QAAM;AAACC,IAAAA;AAAD,MAAYN,SAAS,EAA3B;AACA,QAAM,CAACF,KAAD,EAAQS,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAN,IAAAA,GAAG,CAAC,YAAYG,OAAb,CAAH,CAAyBI,IAAzB,CAA8BC,IAAI,IAAI;AAClCJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAIH,GAPQ,EAON,CAACH,OAAD,CAPM,CAAT;;AASA,MAAIE,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMI,QAAQ,GAAG,qCAAqCd,KAAK,CAACe,WAA5D;AACA,sBACA;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACe,gBAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,GAAEf,MAAM,CAACgB,GAAI,IAAGhB,MAAM,CAACiB,UAAW,EAAnD;AAAqD,MAAA,GAAG,EAAEJ,QAA1D;AAAoE,MAAA,GAAG,EAAEd,KAAK,CAACmB;AAA/E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACgB,GAAvB;AAAA,8BACI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,QAA6BjB,KAAK,CAACmB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,sCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,EAA+BnB,KAAK,CAACoB,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAEA,KAAK,CAACC,IAA9B,EAAoCC,IAApC,CAAyC,IAAzC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,QAAmCxB,KAAK,CAACyB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAaH;;GAhCelB,O;UACML,S;;;KADNK,O","sourcesContent":["import movie from \"./movie.json\"\r\nimport styles from \"../components/Details.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { get } from \"../utils/Fetch\"\r\nimport { Spinner } from \"../components/Spinner\";\r\nexport function Details() {\r\n    const {movieId} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        get(\"/movie/\" + movieId).then(data => {\r\n            setMovie(data);\r\n            setLoading(false);\r\n        })\r\n    }, [movieId])\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    }\r\n\r\n    const imageUrl = \"https://image.tmdb.org/t/p/w500/\" + movie.poster_path;\r\n    return (\r\n    <div className={styles.detailsContainer} >\r\n        <img className={`${styles.col} ${styles.movieImage}`}src={imageUrl} alt={movie.title} />\r\n        <div className={styles.col}>\r\n            <p><strong>Title:</strong>  {movie.title}</p>\r\n            <p>  <strong>Genres: </strong>{movie.genres.map(genre=>genre.name).join(\", \")}</p>\r\n            <p><strong>Description:</strong>  {movie.overview}</p>\r\n        \r\n        </div>\r\n            \r\n    </div>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}